# How many orders were placed in January?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

# How many of those orers were for iPhone?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND product = 'iPhone';

# Show the customer account numbers for all the orders that were placed in February
SELECT DISTINCT acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales FebSales
ON cust.order_id = FebSales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

# Show the cheapest product sold in January and its price
SELECT DISTINCT product, price
FROM BIT_DB.JanSales
WHERE price
IN (SELECT min(price) FROM BIT_DB.JanSales);

# Another way to show the cheapest product sold in January and its price
SELECT distinct product, price
FROM BIT_DB.JanSales
ORDER BY price ASC
LIMIT 1;

# Another way to show the cheapest product sold in January and its price
SELECT DISTINCT product, MIN(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC
LIMIT 1;

# Another way to show the cheapest product sold in January and its price
SELECT product, min(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC
LIMIT 1;

/*Show the total revenue for each product sold in January*/
SELECT product, SUM(quantity)*price AS totalRevenue
FROM BIT_DB.JanSales
GROUP BY product;
 
# Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, SUM(quantity), SUM(quantity)*price AS totalRevenue
FROM FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

# How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(DISTINCT cust.acctnum), AVG(Quantity*price)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers cust
ON FebSales.orderID = cust.order_ID
WHERE FebSales.Quantity >2
AND length(orderID) = 6
AND orderID <> 'Order ID';

# Filter orderdate to dates between 02/13/19 00:00 and 02/18/19 00:00
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate
    between '02/13/19 00:00'
AND '02/18/19 00:00'

# Show the location associated with the order date 02/18/19 01:35
SELECT location
FROM BIT_DB.FebSales
WHERE orderdate = '02/18/19 01:35';

# Show the total items purchased any time on 02/18/19
SELECT SUM(QUANTITY)
FROM BIT_DB.FebSales
WHERE orderdate like '02/18/19%';

# Show all battery products
SELECT DISTINCT product
FROM BIT_DB.FebSales
WHERE product
like '%Batteries%';

# Show all products worth any dollar amount but ending in 99 cents
SELECT DISTINCT product, price
FROM BIT_DB.FebSales
WHERE price
    like '%.99';

# list all the products sold in Los Angeles in February and include how many of each were sold
SELECT product, SUM(quantity), orderdate
FROM BIT_DB.FebSales
WHERE location
    like '%Los Angeles%'
GROUP BY product;

# Which locations in New York received at least 3 orders in January
and how many orders did they each receive?*/
SELECT distinct location, COUNT(orderid) AS order_cnt
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
    AND orderid <> 'Order ID'
    AND location like '%NY%'
GROUP BY location
HAVING COUNT(orderid) >= 3;

# How many of each type of headphone were sold in February?
SELECT product, sum(quantity) AS count
FROM BIT_DB.FebSales
WHERE product like '%Headphones%'
GROUP BY product;

# What was the average amount spent per account in February?
SELECT sum(price*quantity)/count(acctnum) AS avgSpentPerNumOfAccts
FROM FebSales
LEFT JOIN customers
ON FebSales.orderID = customers.order_id
WHERE length(orderid)=6
    AND orderid <> 'Order ID';
  
# OR

SELECT avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'


# What was the average quantity of products purchased per account in February?
SELECT sum(quantity)/count(acctnum) AS avgQuantityProductsPurchased
FROM FebSales
LEFT JOIN customers
ON FebSales.orderid = customers.order_id
WHERE length(orderid)=6
    AND orderid <> 'Order ID';

# Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, sum(quantity*price)
FROM jansales
GROUP BY product
ORDER BY sum(quantity*price) desc
LIMIT 1; 
